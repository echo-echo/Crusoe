Meteor.subscribe("userData");

//use below to open materialize modal
Template.profile.onRendered(function(){
  $('ul.tabs').tabs();
  $('.modal-trigger').leanModal();
});

Template.userMessages.events({
  'click #delete' : function(){
    Session.set('toDelete',this._id);
    $('#promptDelete').openModal();
  }
})
Template.promptDelete.events({
  'click #confirmDeletion' : function(){
    var messageId = Session.get('toDelete')
    $('#promptDelete').closeModal()
    Meteor.call('removeMessage',messageId, function(err, result){
      if(err){
        $('#error').openModal();
      } else {
        $('#confirmDelete').openModal();
      }
    })
  }
})

Template.profileView.helpers({
  taggedMessages: function(){
    var messages=[]
    var taggedIds = Meteor.user().tagged
    var keys = []

    if (taggedIds){
      taggedIds.forEach(function(tagId){
        var message = Messages.find({_id:tagId}).fetch()[0]
        messages.push(message)

        if (message.key){
          var key = [message._id, message.key]
          keys.push(key)
        }
      })
    }

    Meteor.call("getMedia", keys, function(err, result){
      if (err) {
        console.log(err)
      } else {
        messages.forEach(function(message){
          for (var i = 0; i<result.length; i++){
              if (result[i][0] === message._id){
                message.image = result[i][1]
                console.log(messages)

              }
          }
        })
        Session.set("taggedMessages", messages)
      }
    })
    return Session.get("taggedMessages")
  },

  userCreated: function(){
    var username = Meteor.user().username || Meteor.user().profile.name
    var created = Messages.find({username:username});
    return created;
  }
});

Template.writeMessage.events({
  "click .submit": function () {
    var message = $('textarea').val();
    var file = $('input.media-upload')[0].files[0];
    var photo = Session.get("photo");
    var longitude = Number(localStorage.getItem("userLong"));
    var latitude = Number(localStorage.getItem("userLat"));
    var location=[longitude,latitude];
    $('.img-upload-preview').remove() //remove preview

    if ( file || photo ) {
      if ( file ) {
        // need to convert to format that can be sent to the server and then to S3
        var fr = new FileReader();
        fr.readAsDataURL(file);
        fr.onloadend = function (evt) {
          var mediaAsDataURL = evt.target.result;
<<<<<<< HEAD
          var filename = Date.now().toString() + file.name;
          Meteor.call("addMessage", message, location, mediaAsDataURL, filename);
=======
          var filename = file.name;
          var resizedURL;

          //resize image before uploading to S3         
            var img = document.createElement('img');
            img.src = mediaAsDataURL
            img.onload = function(){
              var canvas = document.createElement('canvas');
              var context = canvas.getContext('2d')
              canvas.width = 300;
              canvas.height = 300*img.height/img.width;
              context.drawImage(img, 0, 0, 300, 300*img.height/img.width)  
              resizedURL = canvas.toDataURL()
              console.log(mediaAsDataURL)
              console.log(resizedURL)
              Meteor.call("addMessage", message, location, resizedURL, filename);
            }
>>>>>>> profile pictures loaded
        };
      }

      // else, it's a photo the user just took with their camera
      var filename = Date.now().toString() + ".jpg";
      Meteor.call("addMessage", message, location, photo, filename);

    } else {
      Meteor.call("addMessage", message, location);
    }

    $('textarea').val('');
    $('input.media-upload').val('');
  },

  "click .takephoto": function() {
    $('input.media-upload').val('');

    MeteorCamera.getPicture({}, function (err, data) {
      if ( err ) {
        console.log(err);
        throw new Error;
      }

      Session.set("photo", data);
    })
  }
});
